


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Multi-Step Form with Cards</title>
  <!-- TailwindCSS CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- React & ReactDOM -->
  <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
  <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
  <!-- Framer Motion -->
  <script src="https://unpkg.com/framer-motion/dist/framer-motion.umd.js"></script>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
  <div id="root"></div>

  <script type="text/javascript">
    const { useState } = React;
    const { motion, AnimatePresence } = window['framer-motion'];

    function MultiStepForm() {
      const [step, setStep] = useState(1);
      const [formData, setFormData] = useState({ name: "", email: "", justification: "" });
      const [submitted, setSubmitted] = useState(false);

      const handleChange = (e) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
      };

      const handleSubmit = async () => {
        // Stubbed fetch
        await fetch("https://api.example.com/submit", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(formData),
        });
        setSubmitted(true);
      };

      const steps = [
        <div key="step1" class="p-6 bg-white rounded-2xl shadow-md w-80">
          <h2 class="text-lg font-semibold mb-4">Step 1: Enter Name</h2>
          <input type="text" name="name" value={formData.name} onChange={handleChange} placeholder="Your name"
            class="w-full p-2 border rounded mb-4"/>
          <button onClick={() => setStep(2)} class="px-4 py-2 bg-blue-500 text-white rounded">Next</button>
        </div>,
        <div key="step2" class="p-6 bg-white rounded-2xl shadow-md w-80">
          <h2 class="text-lg font-semibold mb-4">Step 2: Enter Email</h2>
          <input type="email" name="email" value={formData.email} onChange={handleChange} placeholder="Your email"
            class="w-full p-2 border rounded mb-4"/>
          <div class="flex justify-between">
            <button onClick={() => setStep(1)} class="px-4 py-2 bg-gray-300 rounded">Back</button>
            <button onClick={() => setStep(3)} class="px-4 py-2 bg-blue-500 text-white rounded">Next</button>
          </div>
        </div>,
        <div key="step3" class="p-6 bg-white rounded-2xl shadow-md w-80">
          <h2 class="text-lg font-semibold mb-4">Step 3: Justification</h2>
          <textarea name="justification" value={formData.justification} onChange={handleChange} placeholder="Enter justification"
            class="w-full p-2 border rounded mb-4"></textarea>
          <div class="flex justify-between">
            <button onClick={() => setStep(2)} class="px-4 py-2 bg-gray-300 rounded">Back</button>
            <button onClick={handleSubmit} class="px-4 py-2 bg-green-500 text-white rounded">Submit</button>
          </div>
        </div>
      ];

      return (
        <div class="flex flex-col items-center space-y-6">
          <AnimatePresence mode="wait">
            {submitted ? (
              <motion.div key="done" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} exit={{ opacity: 0, y: -20 }}
                class="p-6 bg-green-100 text-green-700 rounded-2xl shadow-md w-80 text-center">
                <h2 class="text-xl font-semibold">âœ… Submitted!</h2>
                <p class="mt-2">Thank you, {formData.name}.</p>
              </motion.div>
            ) : (
              <motion.div key={step} initial={{ opacity: 0, x: 50 }} animate={{ opacity: 1, x: 0 }} exit={{ opacity: 0, x: -50 }} transition={{ duration: 0.3 }}>
                {steps[step-1]}
              </motion.div>
            )}
          </AnimatePresence>

          {/* Example cards */}
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-10">
            {[1,2,3].map((id) => (
              <motion.div key={id} whileHover={{ scale: 1.05 }} class="p-4 bg-gray-200 rounded-lg shadow-md w-64">
                <p class="font-bold">ID: {id} ðŸ¤–</p>
                <p class="mt-2"><span class="font-semibold">PrÃ¡tica Sugerida:</span> Pratica {id}</p>
                <p class="mt-2"><span class="font-semibold">Justificativa:</span> Lorem ipsum lorem ipsum lorem ipsum</p>
                <input type="checkbox" class="mt-2"/>
              </motion.div>
            ))}
          </div>
        </div>
      );
    }

    ReactDOM.createRoot(document.getElementById("root")).render(<MultiStepForm />);
  </script>
</body>
</html>

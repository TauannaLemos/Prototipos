<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Cadastro de Oportunidades</title>
  <script src="https://unpkg.com/react@18/umd/react.development.js" crossorigin></script>
  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js" crossorigin></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <script src="https://unpkg.com/framer-motion/dist/framer-motion.umd.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@3.3.2/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50 flex justify-center items-start min-h-screen p-6">
<div id="root" class="w-full max-w-4xl"></div>

<script type="text/babel">

const { useState } = React;
const { motion } = window['framer-motion'];

function FormCadastro() {
  const [step, setStep] = useState(1);
  const [formData, setFormData] = useState({
    codOferta: '',
    proposta: '',
    cliente: '',
    kam: '',
    mercado: '',
    escopo: '',
    volumetria: '',
    valorEstimado: '',
    dataEntrega: '',
    justificativaSLA: '',
    dataComite: '',
    datasImportantes: [{data: '', descricao: ''}],
    atestados: 'NÃ£o',
    listaAtestados: '',
    servicosCloud: 'NÃ£o',
    cloudProvider: '',
    cloudOutro: '',
    tipoContrato: '',
    vigenciaContrato: '',
    ofertaTrabalhada: 'NÃ£o',
    ofertaPratica: 'NÃ£o',
    praticaSelecionada: '',
    contatoNome: '',
    contatoTelefone: '',
    anexo: '',
    linkSharepoint: ''
  });

  const [showCongrats, setShowCongrats] = useState(false);

  const handleNext = () => setStep(step + 1);
  const handleBack = () => setStep(step - 1);

  const handleChange = (field, value) => {
    setFormData({...formData, [field]: value});
  }

  // Calcula se a dataEntrega respeita SLA de 10 dias Ãºteis
  const isSLAInvalid = () => {
    if (!formData.dataEntrega) return false;
    const today = new Date();
    const entrega = new Date(formData.dataEntrega);
    let businessDays = 0;
    let dateCheck = new Date(today);
    while (dateCheck <= entrega) {
      const day = dateCheck.getDay();
      if (day !== 0 && day !== 6) businessDays++;
      dateCheck.setDate(dateCheck.getDate() + 1);
    }
    return businessDays < 10;
  }

  const addDatasImportantes = () => {
    setFormData({
      ...formData,
      datasImportantes: [...formData.datasImportantes, {data:'', descricao:''}]
    });
  }

  const handleSubmit = () => {
    setShowCongrats(true);
    console.log('Dados enviados:', formData);
  }

  const progress = () => {
    return Math.round((step - 1) / 6 * 100);
  }

  return (
    <div className="bg-white shadow-md rounded-xl p-8 w-full">
      {/* Barra de Progresso */}
      <div className="mb-6">
        <div className="flex justify-between mb-2 text-sm font-medium">
          <span>Progresso: {progress()}%</span>
          <span>Etapa {step} de 6 {progress() === 100 ? 'âœ…' : ''}</span>
        </div>
        <div className="w-full bg-gray-200 h-2 rounded">
          <div className="bg-blue-500 h-2 rounded" style={{width: `${progress()}%`}}></div>
        </div>
      </div>

      {/* Etapas */}
      {step === 1 && (
        <motion.div
          initial={{opacity:0, x:50}}
          animate={{opacity:1, x:0}}
          exit={{opacity:0, x:-50}}
        >
          <h2 className="text-xl font-semibold mb-4">Estrutura</h2>
          <div className="mb-4">
            <label className="block mb-1">CÃ³d. Oferta (MOC/CRM) 
              <span className="ml-2 text-gray-400 cursor-help" title="Informar cÃ³digo CRM/MOC">ðŸ›ˆ</span>
            </label>
            <input type="text" value={formData.codOferta} onChange={e=>handleChange('codOferta', e.target.value)}
              className="w-full border rounded px-3 py-2"/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">Proposta <span className="text-red-500">*</span>
              <span className="ml-2 text-gray-400 cursor-help" title="Nome da Oferta">ðŸ›ˆ</span>
            </label>
            <input type="text" value={formData.proposta} onChange={e=>handleChange('proposta', e.target.value)}
              className="w-full border rounded px-3 py-2" required/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">Cliente <span className="text-red-500">*</span></label>
            <input type="text" value={formData.cliente} onChange={e=>handleChange('cliente', e.target.value)}
              className="w-full border rounded px-3 py-2" required/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">KAM</label>
            <textarea value={formData.kam} onChange={e=>handleChange('kam', e.target.value)}
              className="w-full border rounded px-3 py-2 h-20"/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">Mercado</label>
            <input type="text" value={formData.mercado} onChange={e=>handleChange('mercado', e.target.value)}
              className="w-full border rounded px-3 py-2"/>
          </div>
          <div className="flex justify-between mt-6">
            <button disabled className="bg-gray-300 text-white px-4 py-2 rounded cursor-not-allowed">Voltar</button>
            <button onClick={handleNext} className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">AvanÃ§ar</button>
          </div>
        </motion.div>
      )}

      {step === 2 && (
        <motion.div initial={{opacity:0, x:50}} animate={{opacity:1, x:0}} exit={{opacity:0, x:-50}}>
          <h2 className="text-xl font-semibold mb-4">Escopo</h2>
          <div className="mb-4">
            <label className="block mb-1">Escopo e Objetivo <span className="text-red-500">*</span>
              <span className="ml-2 text-gray-400 cursor-help" title="SoluÃ§Ã£o proposta - Breve resumo da documentaÃ§Ã£o enviada pelo cliente">ðŸ›ˆ</span>
            </label>
            <textarea value={formData.escopo} onChange={e=>handleChange('escopo', e.target.value)}
              className="w-full border rounded px-3 py-2 h-32" required
              minLength={250}/>
            <small className="text-gray-500 text-sm">MÃ­nimo 250 caracteres</small>
          </div>
          <div className="flex justify-between mt-6">
            <button onClick={handleBack} className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Voltar</button>
            <button onClick={handleNext} className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">AvanÃ§ar</button>
          </div>
        </motion.div>
      )}

      {step === 3 && (
        <motion.div initial={{opacity:0, x:50}} animate={{opacity:1, x:0}} exit={{opacity:0, x:-50}}>
          <h2 className="text-xl font-semibold mb-4">Volumetria e Datas</h2>
          <div className="mb-4">
            <label className="block mb-1">Volumetria</label>
            <textarea value={formData.volumetria} onChange={e=>handleChange('volumetria', e.target.value)}
              className="w-full border rounded px-3 py-2 h-20"/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">Valor Estimado <span className="text-red-500">*</span></label>
            <textarea value={formData.valorEstimado} onChange={e=>handleChange('valorEstimado', e.target.value)}
              className="w-full border rounded px-3 py-2 h-20" required/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">Data de Entrega <span className="text-red-500">*</span>
              <span className="ml-2 text-gray-400 cursor-help" title="Deve respeitar o prazo de 10 dias utÃ©is, Casos que estejam fora do SLA padrÃ£o de entrega devem ser justificados">ðŸ›ˆ</span>
            </label>
            <input type="date" value={formData.dataEntrega} onChange={e=>handleChange('dataEntrega', e.target.value)}
              className="w-full border rounded px-3 py-2" required min={new Date().toISOString().split('T')[0]}/>
            {isSLAInvalid() && (
              <div className="mt-2">
                <label className="block mb-1">Justificativa de Oferta fora do SLA <span className="text-red-500">*</span></label>
                <textarea value={formData.justificativaSLA} onChange={e=>handleChange('justificativaSLA', e.target.value)}
                  className="w-full border rounded px-3 py-2 h-20" required/>
              </div>
            )}
          </div>
          <div className="mb-4">
            <label className="block mb-1">Data Prevista ComitÃª</label>
            <input type="date" value={formData.dataComite} onChange={e=>handleChange('dataComite', e.target.value)}
              className="w-full border rounded px-3 py-2"/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">Datas Importantes <span className="text-red-500">*</span>
              <span className="ml-2 text-gray-400 cursor-help" title="Cronograma de envio dos questionamentos, Workshop, datas importantes para confecÃ§Ã£o de entregas">ðŸ›ˆ</span>
            </label>
            {formData.datasImportantes.map((item, idx) => (
              <div key={idx} className="flex gap-2 mb-2">
                <input type="date" value={item.data} onChange={e=>{
                  const newArr = [...formData.datasImportantes];
                  newArr[idx].data = e.target.value;
                  handleChange('datasImportantes', newArr);
                }} className="border rounded px-2 py-1"/>
                <input type="text" value={item.descricao} onChange={e=>{
                  const newArr = [...formData.datasImportantes];
                  newArr[idx].descricao = e.target.value;
                  handleChange('datasImportantes', newArr);
                }} placeholder="DescriÃ§Ã£o" className="border rounded px-2 py-1 flex-1"/>
              </div>
            ))}
            <button type="button" onClick={addDatasImportantes} className="bg-gray-200 px-2 py-1 rounded text-sm">Adicionar Data</button>
          </div>

          <div className="flex justify-between mt-6">
            <button onClick={handleBack} className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Voltar</button>
            <button onClick={handleNext} className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">AvanÃ§ar</button>
          </div>
        </motion.div>
      )}

      {step === 4 && (
        <motion.div initial={{opacity:0, x:50}} animate={{opacity:1, x:0}} exit={{opacity:0, x:-50}}>
          <h2 className="text-xl font-semibold mb-4">Detalhes</h2>

          {/* Atestados */}
          <div className="mb-4">
            <label className="block mb-1">Atestados/Certif. <span className="text-red-500">*</span></label>
            <select value={formData.atestados} onChange={e=>handleChange('atestados', e.target.value)}
              className="w-full border rounded px-3 py-2">
              <option>Sim</option>
              <option>NÃ£o</option>
            </select>
            {formData.atestados === 'Sim' && (
              <textarea value={formData.listaAtestados} onChange={e=>handleChange('listaAtestados', e.target.value)}
                className="w-full border rounded px-3 py-2 h-20 mt-2" placeholder="Liste os atestados" required/>
            )}
          </div>

          {/* ServiÃ§os Cloud */}
          <div className="mb-4">
            <label className="block mb-1">ServiÃ§os Cloud <span className="text-red-500">*</span></label>
            <select value={formData.servicosCloud} onChange={e=>handleChange('servicosCloud', e.target.value)}
              className="w-full border rounded px-3 py-2">
              <option>Sim</option>
              <option>NÃ£o</option>
            </select>
            {formData.servicosCloud === 'Sim' && (
              <div className="mt-2">
                <label className="block mb-1">Cloud/Provider <span className="text-red-500">*</span></label>
                <select value={formData.cloudProvider} onChange={e=>handleChange('cloudProvider', e.target.value)}
                  className="w-full border rounded px-3 py-2" required>
                  <option value="">Selecione</option>
                  <option>AWS</option>
                  <option>MS</option>
                  <option>GCP</option>
                  <option>Outros</option>
                </select>
                {formData.cloudProvider === 'Outros' && (
                  <input type="text" value={formData.cloudOutro} onChange={e=>handleChange('cloudOutro', e.target.value)}
                    className="w-full border rounded px-3 py-2 mt-2" placeholder="Especificar outro" required/>
                )}
              </div>
            )}
          </div>

          <div className="mb-4">
            <label className="block mb-1">Tipo de Contrato</label>
            <select value={formData.tipoContrato} onChange={e=>handleChange('tipoContrato', e.target.value)}
              className="w-full border rounded px-3 py-2">
              <option value="">Selecione</option>
              <option>PrÃ©-venda</option>
              <option>Proposta Nova</option>
              <option>RenovaÃ§Ã£o de contrato</option>
            </select>
          </div>

          <div className="mb-4">
            <label className="block mb-1">VigÃªncia do Contrato <span className="text-red-500">*</span>
              <span className="ml-2 text-gray-400 cursor-help" title="Em meses">ðŸ›ˆ</span>
            </label>
            <input type="text" value={formData.vigenciaContrato} onChange={e=>handleChange('vigenciaContrato', e.target.value)}
              className="w-full border rounded px-3 py-2" required/>
          </div>

          <div className="mb-4">
            <label className="block mb-1">Oferta jÃ¡ foi trabalhada? <span className="text-red-500">*</span></label>
            <select value={formData.ofertaTrabalhada} onChange={e=>handleChange('ofertaTrabalhada', e.target.value)}
              className="w-full border rounded px-3 py-2">
              <option>Sim</option>
              <option>NÃ£o</option>
            </select>
          </div>

          <div className="mb-4">
            <label className="block mb-1">Oferta em tratativa com PrÃ¡ticas? <span className="text-red-500">*</span></label>
            <select value={formData.ofertaPratica} onChange={e=>handleChange('ofertaPratica', e.target.value)}
              className="w-full border rounded px-3 py-2">
              <option>Sim</option>
              <option>NÃ£o</option>
            </select>
            {formData.ofertaPratica === 'Sim' && (
              <input type="text" value={formData.praticaSelecionada} onChange={e=>handleChange('praticaSelecionada', e.target.value)}
                className="w-full border rounded px-3 py-2 mt-2" placeholder="Selecione a prÃ¡tica" required/>
            )}
          </div>

          <div className="mb-4">
            <label className="block mb-1">Anexo</label>
            <input type="file" onChange={e=>handleChange('anexo', e.target.files[0])} className="w-full"/>
          </div>

          <div className="mb-4">
            <label className="block mb-1">Link para pasta no Sharepoint</label>
            <input type="text" value={formData.linkSharepoint} onChange={e=>handleChange('linkSharepoint', e.target.value)}
              className="w-full border rounded px-3 py-2"/>
          </div>

          <div className="flex justify-between mt-6">
            <button onClick={handleBack} className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Voltar</button>
            <button onClick={handleNext} className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">AvanÃ§ar</button>
          </div>
        </motion.div>
      )}

      {step === 5 && (
        <motion.div initial={{opacity:0, x:50}} animate={{opacity:1, x:0}} exit={{opacity:0, x:-50}}>
          <h2 className="text-xl font-semibold mb-4">Contatos</h2>
          <div className="mb-4">
            <label className="block mb-1">Contato (Nome do Cliente) <span className="text-red-500">*</span></label>
            <input type="text" value={formData.contatoNome} onChange={e=>handleChange('contatoNome', e.target.value)}
              className="w-full border rounded px-3 py-2" required/>
          </div>
          <div className="mb-4">
            <label className="block mb-1">Contato (Telefone do Cliente) <span className="text-red-500">*</span></label>
            <input type="tel" value={formData.contatoTelefone} onChange={e=>handleChange('contatoTelefone', e.target.value)}
              className="w-full border rounded px-3 py-2" required/>
          </div>
          <div className="flex justify-between mt-6">
            <button onClick={handleBack} className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Voltar</button>
            <button onClick={handleNext} className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">AvanÃ§ar</button>
          </div>
        </motion.div>
      )}

      {step === 6 && (
        <motion.div initial={{opacity:0, x:50}} animate={{opacity:1, x:0}} exit={{opacity:0, x:-50}}>
          <h2 className="text-xl font-semibold mb-4">RevisÃ£o</h2>
          <div className="mb-4 max-h-96 overflow-y-auto text-gray-700">
            <pre>{JSON.stringify(formData, null, 2)}</pre>
          </div>
          <div className="flex justify-between mt-6">
            <button onClick={handleBack} className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Voltar</button>
            <button onClick={handleSubmit} className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600">Concluir Envio</button>
          </div>
        </motion.div>
      )}

      {/* Modal de ParabÃ©ns */}
      {showCongrats && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50">
          <motion.div initial={{scale:0}} animate={{scale:1}} className="bg-white p-8 rounded-xl shadow-xl text-center w-96">
            <h2 className="text-2xl font-bold mb-4">ðŸŽ‰ ParabÃ©ns!</h2>
            <p className="mb-6">VocÃª completou seu cadastro com sucesso. âœ…</p>
            <button onClick={()=>setShowCongrats(false)} className="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600">Fechar</button>
          </motion.div>
        </div>
      )}
    </div>
  );
}

ReactDOM.createRoot(document.getElementById('root')).render(<FormCadastro />);
</script>
</body>
</html>

